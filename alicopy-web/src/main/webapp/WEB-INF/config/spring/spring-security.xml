<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<!--  Spring-Security 的配置 -->
	<!-- 注意use-expressions=true.表示开启表达式,否则表达式将不可用.
	see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html
	 -->
	 <!-- 配置不过滤的资源（静态资源及登录相关） -->  
    <security:http pattern="/resources/**" security="none"></security:http>   
    
    <security:http pattern="/main/ajax" security="none"/>
	<security:http auto-config="true" use-expressions="true" >
		
		<security:access-denied-handler ref="accessDeniedHandler"/>
		<security:intercept-url pattern="/auth/login" access="permitAll"/>
		<!-- <security:intercept-url pattern="/main/ajax" access="hasRole('ROLE_ADMIN')"/> -->
		<security:intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/main/common" access="hasRole('ROLE_USER')"/>
	
	
	</security:http>
	
	<bean id="accessDeniedHandler"   class="com.yunbang.picerali.security.DefaultAccessDeniedHandler">  
		<property name="errorPage" value="/403.jsp" />  
  	</bean>  
	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<!-- <security:authentication-manager>
	        <security:authentication-provider user-service-ref="customUserDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager> -->
	<security:authentication-manager>
		<security:authentication-provider ref="authenticationProvider">
			
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- 对密码进行MD5编码 -->
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>


<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
    <property name="hideUserNotFoundExceptions" value="false" />  
    <property name="userDetailsService" ref="customUserDetailsService" />  
    <!-- <property name="userCache" ref="userCache" />   -->
    <!-- <property name="messageSource" ref="messageSource" /> -->  
    <property name="passwordEncoder" ref="passwordEncoder" />  
    <!-- <property name="saltSource" ref="saltSource" />   -->
</bean>  




	<!-- 
		通过 customUserDetailsService,Spring会自动的用户的访问级别.
		也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
	 -->
	<!-- <bean id="customUserDetailsService" class="com.yunbang.picerali.service.CustomUserDetailsService"/> -->
	<bean id="customUserDetailsService" class="com.yunbang.picerali.service.DefaultUserDetailsService"/>
	
</beans>
